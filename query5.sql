CREATE DATABASE EXERCISE;
CREATE TABLE CUSTOMER(ID INT PRIMARY KEY,NAME VARCHAR(20),CITY VARCHAR(30),GRADE INT,SALESMAN_ID INT);
INSERT INTO CUSTOMER VALUES(101,"SUDARSHAN","VIZAG",190,201),
	(102,"DILEEP","MUMBAI",192,202),
    (103,"YASWANTH","KOLKATTA",192,203),
    (104,"SURESH","HYDERABAD",189,204),
    (105,"SHANTHAN","CHENNAI",180,205),
    (106,"VINAY","DELHI",172,206),
    (107,"VEERA","MUMBAI",90,207),
    (108,"REDDY","VIZAG",99,208);
SELECT * FROM CUSTOMER;

-- WRITE A SQL QUERY TO FIND OUT THE DETAILS OF THE CUSTOMER WHOSE GRADE ARE ABOVE 100
SELECT * FROM CUSTOMER WHERE GRADE > 100;
-- WRITE A SQL QUERY TO FIND OUT THE DETAILS OF THE CUSTOMER WHOSE GRADE ARE ABOVE OR EQUAL TO 100
SELECT * FROM CUSTOMER WHERE GRADE >= 100;
-- WRITE A SQL QUERY TO FIND OUT THE DETAILS OF THE CUSTOMER WHOSE GRADE ARE ABOVE 100 IN ASCENDING ORDER
SELECT * FROM CUSTOMER WHERE GRADE > 100 ORDER BY GRADE;
-- OR SELECT * FROM CUSTOMER WHERE GRADE > 100 ORDER BY GRADE ASC;
-- WRITE A SQL QUERY TO FIND OUT THE DETAILS OF THE CUSTOMER WHOSE GRADE IS ABOVE 100 AND CITY IS HYDERABAD
SELECT * FROM CUSTOMER WHERE CITY = "HYDERABAD" AND GRADE > 100;
-- WRITE A SQL QUERY TO FIND OUT THE DETAILS OF THE CUSTOMER WHOSE GRADE IS ABOVE 100 OR CITY IS HYDERABAD
SELECT * FROM CUSTOMER WHERE CITY = "HYDERABAD" OR GRADE > 100;
-- WRITE AN SQL QUERY TO FIND CUSTOMER DETAILS WHO ARE EITHER FROM MUMBAI CITY OR WHO DO NOT HAVE A GRADE MORE THAN 100
SELECT * FROM CUSTOMER WHERE CITY="MUMBAI" OR NOT GRADE >100;
-- WRITE AN SQL QUERY TO FIND CUSTOMER DETAILS WHO DO NOT BELONGS TO CITY MUMBAI OR HAVE A GRADE EXCEEDS 200
SELECT * FROM CUSTOMER WHERE NOT CITY="MUMBAI" OR GRADE>200;
CREATE TABLE ORDERS(
	ORDER_NUM INT,
    PURCHASE_AMT INT,
    ORDER_DATE DATE,
    CUSTOMER_ID INT,
    SALESMAN_ID INT
    );
INSERT INTO ORDERS VALUES(2002,1000,"2023-04-03",100,200),(2003,100,"2023-04-04",1001,201),(2004,1020,"2023-04-05",1001,202),(2005,2000,"2023-04-06",102,203);
SELECT * FROM ORDERS;
-- WRITE A QUERY TO FIND THE DETAILS EXCLUDING 2023-04-03 AND SALESMAN_ID GREATER THAN 200 OR PURCHASE_AMT GREATEER THAN 1000
SELECT * FROM ORDERS WHERE NOT ORDER_DATE="2023-04-03" AND SALESMAN_ID > 200 OR PURCHASE_AMT>1000;
CREATE TABLE SALESMAN(
	SALESMAN_ID INT PRIMARY KEY,
    NAME VARCHAR(30),
    CITY VARCHAR(30),
    COMMISSION FLOAT);
SELECT * FROM SALESMAN;
INSERT INTO SALESMAN VALUES(200,"SUDARSHAN","NELLORE",0.5),(201,"YASWANTH","KURNOOL",0.45),(202,"DILEEP","MYDUKUR",0.4);
INSERT INTO SALESMAN VALUES(203,"VINAY","NANDYAL",0.23),(204,"SURESH","KADAPA",0.39);
-- FIND COMMISSION BETWEEN 0.23 AND 0.43
SELECT * FROM SALESMAN WHERE COMMISSION BETWEEN 0.23 AND 0.43;
-- FIND SALESMAN DETAILS WHOSE NAME STARTS WITH S LETTER
SELECT * FROM SALESMAN WHERE NAME LIKE "S%";
-- CREATE A NEW COLUMN ADDRESS AND INSERT DATA IN THAT ADDRESS COLUMN AND DISPLAY THEM IN DESCENDING ORDER
ALTER TABLE SALESMAN ADD COLUMN ADDRESS VARCHAR(30);
UPDATE SALESMAN SET ADDRESS="NLR" WHERE NAME="SUDARSHAN";
UPDATE SALESMAN SET ADDRESS="KNL" WHERE NAME="YASWANTH";
UPDATE SALESMAN SET ADDRESS="MYR" WHERE NAME="DILEEP";
UPDATE SALESMAN SET ADDRESS="NDL" WHERE NAME="VINAY";
UPDATE SALESMAN SET ADDRESS="KDP" WHERE NAME="SURESH";
SELECT ADDRESS AS SALESMAN_ADDRESS FROM SALESMAN ORDER BY ADDRESS DESC;